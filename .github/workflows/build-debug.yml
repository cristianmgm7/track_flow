name: 🔨 Build Debug APKs

on:
  push:
    branches: [ develop, feature/*, release/* ]
  workflow_dispatch:
    inputs:
      flavor:
        description: 'Flavor to build'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
      upload_to_firebase:
        description: 'Upload to Firebase App Distribution'
        required: false
        default: true
        type: boolean

jobs:
  build-android:
    name: 🤖 Build Android Debug
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        flavor: ${{ github.event.inputs.flavor && fromJson(format('["{0}"]', github.event.inputs.flavor)) || fromJson('["development", "staging"]') }}
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        cache: true
        
    - name: 📦 Instalar dependencias
      run: flutter pub get
      
    - name: 🔧 Generar código
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔨 Build APK Debug - ${{ matrix.flavor }}
      run: |
        echo "🚀 Building ${{ matrix.flavor }} flavor..."
        flutter build apk --flavor ${{ matrix.flavor }} --debug --verbose
        
    - name: ✅ Verificar build
      run: |
        apk_file="build/app/outputs/flutter-apk/app-${{ matrix.flavor }}-debug.apk"
        if [ -f "$apk_file" ]; then
          echo "✅ APK generado exitosamente"
          echo "📁 Archivo: $apk_file"
          echo "📏 Tamaño: $(du -h $apk_file | cut -f1)"
          echo "apk_path=$apk_file" >> $GITHUB_OUTPUT
        else
          echo "❌ APK no encontrado"
          ls -la build/app/outputs/flutter-apk/
          exit 1
        fi
      id: verify_build
      
    - name: 📱 Subir a Firebase App Distribution
      if: github.event.inputs.upload_to_firebase != 'false'
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ matrix.flavor == 'development' && secrets.FIREBASE_APP_ID_DEV || secrets.FIREBASE_APP_ID_STAGING }}
        serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        groups: testers
        file: ${{ steps.verify_build.outputs.apk_path }}
        releaseNotes: |
          🚀 Build automático de ${{ matrix.flavor }}
          
          📱 Branch: ${{ github.ref_name }}
          🔄 Commit: ${{ github.sha }}
          👤 Autor: ${{ github.actor }}
          
          📝 Cambios recientes:
          ${{ github.event.head_commit.message }}
          
    - name: 📦 Subir artefacto
      uses: actions/upload-artifact@v4
      with:
        name: trackflow-${{ matrix.flavor }}-debug-apk
        path: ${{ steps.verify_build.outputs.apk_path }}
        retention-days: 7
        
  build-ios:
    name: 🍎 Build iOS Debug
    runs-on: macos-latest
    if: github.event_name == 'workflow_dispatch'
    
    strategy:
      matrix:
        flavor: ${{ github.event.inputs.flavor && fromJson(format('["{0}"]', github.event.inputs.flavor)) || fromJson('["development"]') }}
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        cache: true
        
    - name: 📦 Instalar dependencias
      run: flutter pub get
      
    - name: 🔧 Generar código
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔨 Build iOS Debug - ${{ matrix.flavor }}
      run: |
        echo "🚀 Building iOS ${{ matrix.flavor }} flavor..."
        flutter build ios --flavor ${{ matrix.flavor }} --debug --no-codesign
        
    - name: ✅ Verificar build iOS
      run: |
        if [ -d "build/ios/iphoneos/Runner.app" ]; then
          echo "✅ iOS build generado exitosamente"
          ls -la build/ios/iphoneos/
        else
          echo "❌ iOS build no encontrado"
          ls -la build/ios/
          exit 1
        fi
        
  notify:
    name: 🔔 Notificar Resultado
    runs-on: ubuntu-latest
    needs: [build-android]
    if: always()
    
    steps:
    - name: 📢 Notificar éxito
      if: needs.build-android.result == 'success'
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: |
          ✅ Build debug completado exitosamente
          📱 Rama: ${{ github.ref_name }}
          👤 Autor: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: 📢 Notificar fallo
      if: needs.build-android.result == 'failure'
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: |
          ❌ Build debug falló
          📱 Rama: ${{ github.ref_name }}
          👤 Autor: ${{ github.actor }}
          🔗 Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}