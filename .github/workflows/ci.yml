name: 🧪 CI - Tests and Analysis

on:
  workflow_dispatch:

jobs:
  test:
    name: 🧪 Unit Tests and Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔧 Configure Flutter for testing
      run: |
        flutter config --no-analytics
        flutter config --no-cli-animations
      
    - name: 🔍 Code analysis
      run: flutter analyze
      
    - name: 🧪 Run unit tests
      run: flutter test --coverage --reporter github --dart-define=FLUTTER_TEST=true
      env:
        FLUTTER_TEST: true
      
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: coverage/lcov.info
        flags: unittests
        name: trackflow-coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        
  build-check:
    name: 🔨 Verify Builds by Flavor
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      fail-fast: false
      matrix:
        flavor: [development, staging, production]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔨 Build APK Debug - ${{ matrix.flavor }}
      run: flutter build apk --flavor ${{ matrix.flavor }} --debug
      
    - name: ✅ Verify generated file
      run: |
        apk_file="build/app/outputs/flutter-apk/app-${{ matrix.flavor }}-debug.apk"
        if [ -f "$apk_file" ]; then
          echo "✅ APK generated successfully for ${{ matrix.flavor }}"
          echo "📁 Size: $(du -h $apk_file | cut -f1)"
        else
          echo "❌ APK not found for ${{ matrix.flavor }}"
          ls -la build/app/outputs/flutter-apk/
          exit 1
        fi
        
  integration-test:
    name: 🎯 Integration Tests
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
      
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        cache: true
        
    - name: 📦 Install dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🚀 Run integration tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 34
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        script: flutter test integration_test/
        
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
      
    - name: 🔍 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📊 Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'