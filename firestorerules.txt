rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // REGLA PARA PERFILES DE USUARIO
    // Un usuario solo puede leer y escribir su propio perfil.
    // Esto es crucial para la seguridad y la privacidad.
    match /user_profile/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Helper function to check if the user is an owner or collaborator
    function isOwnerOrCollaborator(project) {
      return request.auth.uid == project.ownerId || request.auth.uid in project.collaboratorIds;
    }
    
    }

    // REGLAS PARA PROYECTOS (projects) - CORREGIDAS
    // Utiliza el campo `collaboratorIds` para validaciones de seguridad,
    // ya que es una lista simple y eficiente de comprobar.
    match /projects/{projectId} {
      
      // PERMITIR LECTURA Y ACTUALIZACIÓN:
      // Un usuario puede leer o actualizar si su UID está en la lista de `collaboratorIds`.
      allow read, update: if request.auth != null && request.auth.uid in resource.data.collaboratorIds;

      // PERMITIR CREACIÓN:
      // Un usuario puede crear un proyecto si su UID está en la lista de `collaboratorIds` del nuevo documento que se está creando.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.collaboratorIds;

      // PERMITIR BORRADO:
      // Solo el `ownerId` del proyecto puede borrarlo.
      allow delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    
    // Allow read access if the user is the owner or a collaborator
      allow get: if isOwnerOrCollaborator(get(/databases/$(database)/documents/projects/$(projectId)).data);
      
      // Allow list access for queries where the user is the owner or a collaborator
      allow list: if request.auth.uid != null &&
                   (request.query.resource == null || 
                    isOwnerOrCollaborator(request.query.resource.data));

      // Allow creating projects for any authenticated user
      allow create: if request.auth.uid != null;
      
      // Allow updates and deletes only for the project owner
      allow update, delete: if request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId;
    
    }

    // REGLAS PARA SUB-COLECCIONES DE PROYECTOS (ej: audio_tracks) - CORREGIDAS
    // El acceso se concede si el UID del usuario está en la lista `collaboratorIds` del documento del proyecto padre.
    match /projects/{projectId}/{subcollection}/{documentId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/projects/$(projectId)).data.collaboratorIds.hasAny([request.auth.uid]);
    }

  }
}