workflows:
  ios_develop_testflight:
    name: iOS Develop ‚Üí TestFlight
    instance_type: mac_mini_m2
    max_build_duration: 60
    triggering:
      events: [push]
      branch_patterns:
        - pattern: develop
    environment:
      xcode: 16.0
      flutter: stable
      groups: [app_store_connect]
      vars:
        FLAVOR: develop
        SCHEME: develop
        CONFIG: Release-develop
        BUNDLE_ID: com.trackflow.dev
    scripts:
      - name: üîê Set up keychain
        script: keychain initialize
      - name: ü™™ Import distribution certificate (.p12) [optional]
        script: |
          if [ -n "${IOS_DIST_P12:-}" ] && [ -f "$IOS_DIST_P12" ]; then
            echo "Importing distribution certificate from $IOS_DIST_P12";
            keychain add-certificates --certificate "$IOS_DIST_P12" --password "$IOS_DIST_P12_PASSWORD";
          else
            echo "IOS_DIST_P12 not provided or file missing; skipping manual import and relying on App Store Connect fetched certs.";
          fi
      - name: üîé List signing identities (debug)
        script: keychain list-identities || true
      - name: üìÑ Install manual provisioning profiles (if provided)
        script: |
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          echo "Scanning environment for .mobileprovision secure files..."
          while IFS='=' read -r name value; do
            if [[ -n "${value:-}" ]] && [[ -f "$value" ]] && [[ "$value" == *.mobileprovision ]]; then
              echo "Installing provisioning profile from $value"
              cp "$value" "$HOME/Library/MobileDevice/Provisioning Profiles/"
            fi
          done < <(env)
          echo "Installed profiles:"
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles" || true
      - name: ü™™ Add certificates to keychain
        script: keychain add-certificates
      - name: üß© Apply signing to Xcode project
        script: xcode-project use-profiles
      - name: üìã Check Flutter version
        script: flutter --version
      - name: üì¶ Get dependencies
        script: flutter pub get
      - name: üîß Generate code
        script: flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: üçé Install iOS dependencies
        script: cd ios && pod install --repo-update && cd ..
      - name: üî® Build IPA
        script: flutter build ipa --flavor $FLAVOR --release --verbose
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/**/Logs/**/*.log
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Internal Testers

  ios_staging_testflight:
    name: iOS Staging ‚Üí TestFlight
    instance_type: mac_mini_m2
    max_build_duration: 60
    triggering:
      events: [push]
      branch_patterns:
        - pattern: staging
    environment:
      xcode: 16.0
      flutter: stable
      groups: [app_store_connect]
      vars:
        FLAVOR: staging
        SCHEME: staging
        CONFIG: Release-staging
        BUNDLE_ID: com.trackflow.staging
    scripts:
      - name: üîê Set up keychain
        script: keychain initialize
      - name: ü™™ Import distribution certificate (.p12) [optional]
        script: |
          if [ -n "${IOS_DIST_P12:-}" ] && [ -f "$IOS_DIST_P12" ]; then
            echo "Importing distribution certificate from $IOS_DIST_P12";
            keychain add-certificates --certificate "$IOS_DIST_P12" --password "$IOS_DIST_P12_PASSWORD";
          else
            echo "IOS_DIST_P12 not provided or file missing; skipping manual import and relying on App Store Connect fetched certs.";
          fi
      - name: üîé List signing identities (debug)
        script: keychain list-identities || true
      - name: üìÑ Install manual provisioning profiles (if provided)
        script: |
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          echo "Scanning environment for .mobileprovision secure files..."
          while IFS='=' read -r name value; do
            if [[ -n "${value:-}" ]] && [[ -f "$value" ]] && [[ "$value" == *.mobileprovision ]]; then
              echo "Installing provisioning profile from $value"
              cp "$value" "$HOME/Library/MobileDevice/Provisioning Profiles/"
            fi
          done < <(env)
          echo "Installed profiles:"
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles" || true
      - name: ü™™ Add certificates to keychain
        script: keychain add-certificates
      - name: üß© Apply signing to Xcode project
        script: xcode-project use-profiles
      - name: üìã Check Flutter version
        script: flutter --version
      - name: üì¶ Get dependencies
        script: flutter pub get
      - name: üîß Generate code
        script: flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: üçé Install iOS dependencies
        script: cd ios && pod install --repo-update && cd ..
      - name: üî® Build IPA
        script: flutter build ipa --flavor $FLAVOR --release --verbose
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/**/Logs/**/*.log
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - Testers