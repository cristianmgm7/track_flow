rules_version = '2';

// Firebase Storage Security Rules for TrackFlow
// These rules secure your storage bucket while allowing your app to function properly
service firebase.storage {
  match /b/{bucket}/o {
    
    // Root-level security: require authentication for all operations
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    
    // User avatars - users can upload and manage their own avatars
    match /avatars/{userId}/{avatarFile} {
      // Allow users to upload/update/delete their own avatar
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow all authenticated users to read avatars (for displaying in UI)
      allow read: if request.auth != null;
    }
    
    // Audio tracks - authenticated users can upload and access audio files
    match /audio_tracks/{trackFile} {
      // Allow authenticated users to upload audio tracks
      allow write: if request.auth != null
                   && isValidAudioFile(trackFile)
                   && request.resource.size < 50 * 1024 * 1024; // 50MB limit

      // Allow authenticated users to read audio tracks
      allow read: if request.auth != null;

      // Allow authenticated users to delete audio tracks they own
      // Note: Additional authorization should be handled at the application level
      allow delete: if request.auth != null;
    }

    // Audio comments - project collaborators can upload and access audio comments
    match /audio_comments/{projectId}/{versionId}/{commentFile} {
      // Allow authenticated users to upload audio comments
      // Note: Project-level permissions should be enforced at application layer
      allow write: if request.auth != null
                   && isValidAudioFile(commentFile)
                   && request.resource.size < 10 * 1024 * 1024; // 10MB limit for comments

      // Allow authenticated users to read audio comments
      // Note: Project-level permissions should be enforced at application layer
      allow read: if request.auth != null;

      // Allow authenticated users to delete audio comments
      // Note: Comment ownership and permissions should be enforced at application layer
      allow delete: if request.auth != null;
    }

    // Helper functions
    function isValidAudioFile(filename) {
      // Check if file has a valid audio extension
      return filename.matches('.*\\.(mp3|wav|m4a|aac|ogg|flac)$');
    }
  }
}
